Parte I - Comandos de Input e Output

# 1. Navegue at√© a pasta unix_tests ;
    cd unix_tests

# 2. Crie um arquivo texto com o nome skills2.txt e adicione os valores Internet , Unix e Bash , um em cada linha.
    touch skills2.txt
    echo "Internet" >> skills2.txt
    echo "Unix" >> skills2.txt
    echo "Bash" >> skills2.txt

# 3. Adicione mais 5 itens √† sua lista de skills e depois imprima a lista ordenada no terminal. 
    echo "HTML" >> skills2.txt
    echo "CSS" >> skills2.txt
    echo "JavaScript" >> skills2.txt
    echo "React" >> skills2.txt
    echo "SQL" >> skills2.txt
    sort < skills2.txt

# 4. Conte quantas linhas tem o arquivo skills2.txt .
    cat skills2.txt | wc -l

# 5. Crie um arquivo chamado top_skills.txt usando o skills2.txt , contendo as 3 primeiras skills em ordem alfab√©tica.
    sort < skills2.txt | head -n 3 > top_skills.txt

# 6. Crie um novo arquivo chamado phrases2.txt e adicione algumas frases de sua escolha.
    touch phrases2.txt
    echo "The quick brown fox jumps over the lazy dog." > phrases2.txt
    echo "Quick fox jumps nightly above wizard." >> phrases2.txt
    echo "The quick onyx goblin jumps over the lazy dwarf." >> phrases2.txt,

# 7. Conte o n√∫mero de linhas que cont√™m as letras br .
    grep br phrases2.txt | wc -l

# 8. Conte o n√∫mero de linhas que n√£o cont√™m as letras br .
    grep -v br phrases2.txt | wc -l

# 9. Adicione dois nomes de pa√≠ses ao final do arquivo phrases2.txt .
    echo "Jap√£o" >> phrases2.txt
    echo "Austr√°lia" >> phrases2.txt

# 10. Crie um novo arquivo chamado bunch_of_things.txt com os conte√∫dos dos arquivos phrases2.txt e countries.txt .
    cp countries.txt bunch_of_things.txt
    cat phrases2.txt >> bunch_of_things.txt

# 11. Ordene o arquivo bunch_of_things.txt .
    sort bunch_of_things.txt -o bunch_of_things.txt

Parte II - Permiss√µes

# 1. Navegue at√© a pasta unix_tests ;
    cd unix_tests

# 2. Rode o comando ls -l e veja quais as permiss√µes dos arquivos;
    ls -l

# 3. Mude a permiss√£o do arquivo bunch_of_things.txt para que todos os usu√°rios possam ter acesso √† leitura e escrita e verifique se est√° correto com o comando ls -l ;
    chmod a+rw bunch_of_things.txt
    ls -l

# 4. Tire a permiss√£o de escrita do arquivo bunch_of_things.txt para todos os usu√°rios, verifique se est√° correto com o comando ls -l ;
    chmod a-w bunch_of_things.txt
    ls -l

# 5. Volte a permiss√£o do arquivo bunch_of_things.txt para a listada inicialmente utilizando o comando chmod 644 bunch_of_things.txt .
    chmod 644 bunch_of_things.txt
    ls -l

Parte III - Processos & Jobs

# 1. Liste todos os processos;
    ps

# 2. Agora use o comando sleep 30 & ;
    sleep 30 &

# 3. Use a listagem de processos para encontrar o PID do processo que est√° executando o comando sleep 30 e termine a sua execu√ß√£o (mate o processo) ;
    ps | grep sleep
    kill 1234 # se 1234 for o PID do processo criado no Exerc√≠cio 2

# 4. Execute novamente o comando sleep 30 , mas agora sem o & . Depois, fa√ßa com que ele continue executando em background;
    sleep 30
    "ctrl+z"
    bg

# 5. Crie um processo em background que rode o comando sleep por 300 segundos.
    sleep 300 &

# 6. Crie mais dois processos que rodem o comando sleep por 200 e 100 segundos, respectivamente. Voc√™ deve cri√°-los em foreground (sem usar o & ) e envi√°-los para background ap√≥s cada um come√ßar a executar.
    sleep 200
    "ctrl+z"
    sleep 100
    "ctrl+z"

# 7. Verifique que apenas o processo sleep 300 est√° em execu√ß√£o com o comando jobs . Suspenda a execu√ß√£o desse processo (voc√™ vai precisar trazer o processo para foreground e suspend√™-lo, ou enviar um sinal).
    jobs
    fg %1 # trazendo o processo sleep 300 para foreground com o comando fg
    "ctrl+z"
    
# 8. Retome a execu√ß√£o do processo sleep 100 em background.
    bg %3 # executando o processo sleep 100 em background com o comando bg
    jobs

# 9. Termine a execu√ß√£o de todos os processos sleep (mate os processos) .
    "ctrl+c"

(B√¥nus) - Parte IV - O despertar do terminal

# 1. Se voc√™ utiliza o Linux , abra o terminal e execute o comando sudo apt-get install cmatrix , ou para pessoas usu√°rias de macOS , utilize no terminal brew install cmatrix . Depois, execute o comando cmatrix . Quando estiver se sentindo como o Neo , aperte ctrl+c para voltar ao terminal;
    sudo apt-get install cmatrix
    cmatrix

# 2. No sistema Linux , execute o comando sudo apt-get install fortune , ou no macOS brew install fortune , e ap√≥s a instala√ß√£o, crie um arquivo de texto chamado fortune.txt que contenha a sua sorte do dia. Utilize apenas uma linha de comando. Dica: use o comando fortune , e o operador > ;
    sudo apt-get install fortune
    fortune > fortune.txt

# 3. Conte quantas palavras tem a frase da sua sorte do dia. Dica: use o comando wc ;
    wc -w fortune.txt

# 4. Execute o comando sudo apt-get install sl em um terminal Linux , ou brew install sl em um terminal macOS . Ap√≥s a instala√ß√£o, execute o comando sl . Agora tente sl -F ;
    sudo apt-get install sl
    sl
    sl -F

# 5. No sistema Linux , execute o comando sudo apt-get install cowsay , ou brew install cowsay no macOS . Ap√≥s a instala√ß√£o, execute o comando cowsay e algo que voc√™ queira falar. Agora fa√ßa a vaquinha dizer a frase que est√° gravada no arquivo fortune.txt ;
    sudo apt-get install cowsay
    cowsay show
    tail fortune.txt | cowsay

# 6. Descubra os fatores primos usando o comando factor e em seguida o n√∫mero 42 ;
    factor 42

# 7. Veja como fica a sua sorte do dia ao contr√°rio. Dica: utilize o comando rev .
    tail fortune.txt | rev

# 8. Execute o comando telnet towel.blinkenlights.nl . Lembre-se de que voc√™ tem mais exerc√≠cios para fazer! üòÖ
    telnet towel.blinkenlights.nl
